// Code generated by rpcgen; DO NOT EDIT.
//
// Source: api/api.go
// Template: templates/recorder.go.tmpl

package api

type recordingMiddleware struct {
  a     API
  store *store.Store
	log   *logrus.Logger
}

func NewRecordingMiddleware(a API, store *store.Store, log *logrus.Logger) API {
	return &recordingMiddleware{
		a:     a,
    store: store,
		log:   log,
	}
}

{{range .Endpoints}}
func (rm *recordingMiddleware) {{.Name}}(ctx context.Context, req {{.Name}}Request) (*{{.Name}}Response, error) {
	var err error
	defer func() {
    activity := &model.Activity{
      Method: "{{.Name}}",
    }
    activity.Data, err = json.Marshal(req)
    if err != nil {
      rm.log.Error(err)
      return
    }
		err = rm.store.SaveActivity(activity)
		if err != nil {
			rm.log.Error(err)
		}
	}()
	response, err := rm.a.{{.Name}}(ctx, req)
	return response, err
}
{{end}}
