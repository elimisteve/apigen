// Code generated by apigen; DO NOT EDIT.
//
// Source: api/api.go
// Template: templates/logging.go.tmpl

package api

type loggingMiddleware struct {
	log *logrus.Logger
	api API
}

func NewLoggingMiddleware(api API, log *logrus.Logger) API {
	return &loggingMiddleware{
		log: log,
		api:   api,
	}
}

{{range .Endpoints}}
func (l *loggingMiddleware) {{.Name}}(ctx context.Context, req {{.Name}}Request) (*{{.Name}}Response, error) {
	var err error
	defer func() {
		fields := logrus.Fields{
      "method":     "{{.Name}}",
			"user_agent": ctx.Value("userAgent"),
		}
		if err == nil {
			l.log.WithFields(fields).Info("request")
		} else {
			fields["error"] = err
			l.log.WithFields(fields).Error("request failed")
		}
	}()
  resp, err := l.api.{{.Name}}(ctx, req)
	return resp, err
}
{{end}}
