// Code generated by rpcgen; DO NOT EDIT.
//
// Source: api/api.go
// Template: templates/recorder.go.tmpl

package api

import (
	"context"
	"encoding/json"

	"github.com/konradreiche/apigen/model"
	"github.com/konradreiche/apigen/store"
	"github.com/sirupsen/logrus"
)

type recordingMiddleware struct {
	a     API
	store *store.Store
	log   *logrus.Logger
}

func NewRecordingMiddleware(a API, store *store.Store, log *logrus.Logger) API {
	return &recordingMiddleware{
		a:     a,
		store: store,
		log:   log,
	}
}

func (rm *recordingMiddleware) GetPrice(ctx context.Context, req GetPriceRequest) (*GetPriceResponse, error) {
	var err error
	defer func() {
		activity := &model.Activity{
			Method: "GetPrice",
		}
		activity.Data, err = json.Marshal(req)
		if err != nil {
			rm.log.Error(err)
			return
		}
		err = rm.store.SaveActivity(activity)
		if err != nil {
			rm.log.Error(err)
		}
	}()
	response, err := rm.a.GetPrice(ctx, req)
	return response, err
}
